@typeparam TValue
@inherits FormControl<TValue>

@RenderBase

@code{
    /// <summary>
    /// Items.
    /// </summary>
    [Parameter]
    public IEnumerable<TValue> Items { get; set; } = Enumerable.Empty<TValue>();

    /// <inheritdoc/>
    protected override CssClassBuilder ControlCssBuilder => CssClassBuilder.Create("form-select")
            .WithClass(ControlClass)
            .WithClass("form-select-sm", Size == Size.Small)
            .WithClass("form-select-lg", Size == Size.Large);

    /// <inheritdoc/>h
    protected override RenderFragment RenderControl => __builder =>
    {
        <select id="@Id" class="@ControlCssBuilder.Build()"
                style="@ControlStyle"
                required="@Required"
                disabled="@Disabled"
                @onchange="@((e) => HandleValueChanged(e.Value))">

            <option value="" disabled="@Required">@Placeholder</option>
            @foreach (var item in Items)
            {
                <option value="@item" selected="@(item?.Equals(Value))">
                    @GetDisplayValue(item)
                </option>
            }
        </select>
    };
}