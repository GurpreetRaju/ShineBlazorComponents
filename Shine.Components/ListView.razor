@using Microsoft.AspNetCore.Components.Web.Virtualization

@inherits BackgroundComponentBase

@typeparam TItem

<ul class="@CssClasses" styles="@CssStyles"
    @attributes="@AdditionalAttributes">
    <Virtualize Context="listItem" 
        Items="@Items"
        ItemsProvider="@ItemsProvider"
        Placeholder="@Placeholder">
        <li class="@ItemCssBuilder.Build()">
        @if (ItemTemplate != null)
            {
                @ItemTemplate.Invoke(listItem)
            }
            else
            {
                @listItem
            }
        </li>
    </Virtualize>
</ul>

@code {

    /// <summary>
    /// Items collection.
    /// </summary>
    [Parameter]
    public ICollection<TItem> Items { get; set; }

    /// <summary>
    /// Items provider.
    /// </summary>
    [Parameter]
    public ItemsProviderDelegate<TItem> ItemsProvider { get; set; }

    /// <summary>
    /// Item template.
    /// </summary>
    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; }

    /// <summary>
    /// Placeholder template for items that are not yet loaded in memory.
    /// </summary>
    [Parameter]
    public RenderFragment<PlaceholderContext> Placeholder { get; set; }

    /// <summary>
    /// The css class for items.
    /// </summary>
    [Parameter]
    public string ItemClass { get; set; }

    /// <inheritdoc/>
    protected override string ComponentName => "list-group";

    /// <summary>
    /// CSS classes for items.
    /// </summary>
    protected CssClassBuilder ItemCssBuilder => CssClassBuilder.Create("list-group-item").WithClass(ItemClass);

}