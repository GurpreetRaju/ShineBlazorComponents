@using Microsoft.AspNetCore.Components.Web.Virtualization

@inherits ShineComponentBase

@typeparam TItem

<ul class="@CssClasses" styles="@CssStyles"
    @attributes="@AdditionalAttributes">
    <Virtualize Context="listItem" 
        Items="@Items"
        ItemsProvider="@ItemsProvider"
        Placeholder="@Placeholder">

        @if (ItemTemplate != null)
        {
            <li>@ItemTemplate.Invoke(listItem)</li>
        }
        else
        {
            <li>@listItem</li>
        }
    </Virtualize>
</ul>

@code {

    /// <summary>
    /// Items collection.
    /// </summary>
    [Parameter]
    public ICollection<TItem> Items { get; set; }

    /// <summary>
    /// Items provider.
    /// </summary>
    [Parameter]
    public ItemsProviderDelegate<TItem> ItemsProvider { get; set; }

    /// <summary>
    /// Item template.
    /// </summary>
    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; }

    /// <summary>
    /// Placeholder template for items that are not yet loaded in memory.
    /// </summary>
    [Parameter]
    public RenderFragment<PlaceholderContext> Placeholder { get; set; }

    /// <summary>
    /// Whether to add borders to the list.
    /// </summary>
    [Parameter]
    public bool HasBorder { get; set; }

    /// <summary>
    /// Whether to add shadow to the list.
    /// </summary>
    [Parameter]
    public bool HasShadow { get; set; }

    /// <summary>
    /// CSS classes for the component including classes extracted from the class attribute added to the component.
    /// </summary>
    protected override string CssClasses => JoinClasses("w3-ul", 
                                                        HasShadow ? "w3-card" : null, 
                                                        HasBorder ? "w3-border" : null, 
                                                        base.CssClasses);

}