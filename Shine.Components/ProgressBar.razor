@inherits BackgroundComponentBase

<div class="progress" role="progressbar" aria-valuenow="@_progress" aria-valuemin="0" aria-valuemax="100">
    <div class="@CssClasses" style="@CssStyles" @attributes="AdditionalAttributes">
        @if (ShowProgress)
        {
            @ProgressValue
        }
        @ChildContent
    </div>
</div>

@code{

    private int _progress;

    /// <summary>
    /// The progress value.
    /// </summary>
    [Parameter]
    public int ProgressValue { get; set; }

    /// <summary>
    /// The max value. Default: 100.
    /// </summary>
    [Parameter]
    public int MaxValue { get; set; } = 100;

    /// <summary>
    /// Whether to show the progress on the bar.
    /// </summary>
    [Parameter]
    public bool ShowProgress { get; set; }

    /// <summary>
    /// Whether to show the striped bar.
    /// </summary>
    [Parameter]
    public bool IsStriped { get; set; }

    /// <summary>
    /// The child content.
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent{ get; set; }

    /// <inheritdoc/>
    protected override string ComponentName => "progress-bar";

    /// <inheritdoc/>
    protected override CssClassBuilder CssBuilder => base.CssBuilder.WithClass("progress-bar-striped", IsStriped);

    /// <inheritdoc/>
    protected override CssStyleBuilder StyleBuilder => base.StyleBuilder.AddStyle($"width:{_progress}%");

    /// <inheritdoc/>
    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        var max = Math.Max(MaxValue, ProgressValue);
        _progress = (max / MaxValue) * 100;
    }
}