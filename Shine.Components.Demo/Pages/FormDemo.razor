@using Shine.Components.Common
@using Shine.Components.Form
@using System.Globalization

@page "/form"

<Page PageName="Form">
    <Example Code="@Code">
        <div class="row">
            <div class="col">
                <EditForm Model="@_formModel">
                    <FormControl Label="User Name" InputType="InputType.Text" Placeholder="User name" @bind-Value="@_formModel.UserName" />
                    <FormControl Label="Password" InputType="InputType.Password" Placeholder="Password" @bind-Value="@_formModel.Password" />
                    <FormControl Label="Date Of Birth" InputType="InputType.Date" @bind-Value="@_formModel.DateOfBirth" />
                    <FormControl Label="Age" InputType="InputType.Number" @bind-Value="@_formModel.Age" />
                    <CheckboxControl Label="Keep logged in" Switch="true" @bind-Value="_formModel.KeepLoggedIn" Text="@(_formModel.KeepLoggedIn ? "Yes" : "No")" />
                    <RadioControl Label="Gender" Items="RadioOptions" @bind-Value="_formModel.Gender" />
                </EditForm>
            </div>
            <div class="col">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th colspan="2">Result</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row">User Name</th>
                            <td>@_formModel.UserName</td>
                        </tr>
                        <tr>
                            <th scope="row">Password</th>
                            <td>@_formModel.Password</td>
                        </tr>
                        <tr>
                            <th scope="row">Date Of Birth</th>
                            <td>@(_formModel.DateOfBirth.HasValue ? _formModel.DateOfBirth.Value.ToString(CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern) : string.Empty)</td>
                        </tr>
                        <tr>
                            <th scope="row">Age</th>
                            <td>@_formModel.Age</td>
                        </tr>
                        <tr>
                            <th scope="row">Keep Logged In</th>
                            <td>@_formModel.KeepLoggedIn.ToString()</td>
                        </tr>
                        <tr>
                            <th scope="row">Gender</th>
                            <td>@_formModel.Gender?.ToString()</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </Example>

    <Example Header="Input Editor" Code="@InputEditorCode">
        <div class="row mb-3">
            <div class="col">Number: </div>
            <div class="col"><InputControl @bind-Value="_number" /></div>
            <div class="col"><Text>Current Value: @_number</Text></div>
        </div>
        <div class="row mb-3">
            <div class="col">Text: </div>
            <div class="col"><InputControl @bind-Value="_text" /></div>
            <div class="col"><Text>Current Value: @_text</Text></div>
        </div>
        <div class="row mb-3">
            <div class="col">Decimal: </div>
            <div class="col"><InputControl @bind-Value="_float" /></div>
            <div class="col"><Text>Current Value: @_float</Text></div>
        </div>
        <div class="row mb-3">
            <div class="col">DateTime: </div>
            <div class="col"><InputControl @bind-Value="_dateTime" /></div>
            <div class="col"><Text>Current Value: @_dateTime</Text></div>
        </div>
    </Example>
</Page>

@code {
    private int _number = 0;
    private string _text = "Edit text";
    private double _float = 0;
    private DateTime? _dateTime;

    private FormModel _formModel = new FormModel();
    private string[] RadioOptions = new string[] { "Male", "Female", "X" };

    private const string Code = "<EditForm Model=\"@_formModel\">\n"
        + "\t<FormControl Label=\"User Name\" InputType=\"InputType.Text\" Placeholder=\"User name\" @bind-Value=\"@_formModel.UserName\" />\n"
        + "\t<FormControl Label=\"Password\" InputType=\"InputType.Password\" Placeholder=\"Password\" @bind-Value=\"@_formModel.Password\" />\n"
        + "\t<FormControl Label=\"Date Of Birth\" InputType=\"InputType.Date\" @bind-Value=\"@_formModel.DateOfBirth\" />\n"
        + "\t<FormControl Label=\"Age\" InputType=\"InputType.Number\" @bind-Value=\"@_formModel.Age\" />\n"
        + "\t<CheckboxControl Label=\"Keep logged in\" Switch=\"true\" @bind-Value=\"_formModel.KeepLoggedIn\" Text=\"@(_formModel.KeepLoggedIn ? \"Yes\" : \"No\")\" />\n"
        + "\t<RadioControl Label=\"Gender\" Items=\"RadioOptions\" @bind-Value=\"_formModel.Gender\" />\n"
    + "</EditForm>\n";

    private const string InputEditorCode = "<InputControl @bind-Value=\"_value\" />\n";

    /// <summary>
    /// The form model.
    /// </summary>
    private class FormModel {

        /// <summary>
        /// The user name.
        /// </summary>
        public string UserName { get; set; }

        /// <summary>
        /// The password.
        /// </summary>
        public string Password { get; set; }

        /// <summary>
        /// The date of birth.
        /// </summary>
        public DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// The age.
        /// </summary>
        public int? Age { get; set; }

        /// <summary>
        /// Keep user logged in.
        /// </summary>
        public string Gender { get; set; }

        /// <summary>
        /// Keep user logged in.
        /// </summary>
        public bool KeepLoggedIn { get; set; }
    }
}
